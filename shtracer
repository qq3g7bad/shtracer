#!/bin/sh

##
# @defgroup Global variables
# @{

CONFIG_PATH=''
SHTRACER_MODE='NORMAL'
BEFORE_TAG=''
AFTER_TAG=''
SHTRACER_SEPARATOR="<shtracer_separator>"
NODATA_STRING="NONE"
CURRENT_DIR="$(pwd)"
SCRIPT_DIR=$(cd "$(dirname "$0")" && pwd)
OUTPUT_DIR="${SCRIPT_DIR%/}/output/"
##
# @}
#

##
# @brief  Load helper functions
# @tag    @IMP1.1@ (FROM: @ARC1.2@)
load_functions() {
	_PREVIOUS_DIR="$(pwd)"
	cd "${SCRIPT_DIR}" || error_exit 1 "load_fucntions" "Cannot change current directory"
	. "./scripts/main/shtracer_util.sh"
	. "./scripts/main/shtracer_func.sh"
	. "./scripts/main/shtracer_html.sh"
	cd "${_PREVIOUS_DIR}" || error_exit 1 "load_functions" "Cannot change current directory"
}

##
# @brief  Print usage
# @tag    @IMP1.2@ (FROM: @ARC1.2@)
print_usage() {
	cat <<-USAGE 1>&2
		Usage: shtracer <configfile> [options]

		Options:
		  -c <before_tag> <after_tag>      Change mode: swap or rename trace target tags
		  -v                               Verify mode: detect duplicate or isolated tags
		  -t                               Test mode: execute unit tests
		  -h, --help                       Show this help message

		Examples:
		  1. Normal mode
		     $ ./shtracer ./sample/config.md

		  2. Change mode (swap or rename tags).
		     $ ./shtracer ./sample/config.md -c old_tag new_tag.

		  3. Verify mode (check for duplicate or isolated tags).
		     $ ./shtracer ./sample/config.md -v

		  4. Test mode
		     $ ./shtracer -t

		Note:
		  - The <configfile> argument must always be specified before options.

		Version:
		  - 0.0.3

	USAGE
	exit 1
}

##
# @brief  Parse arguments
# @tag    @IMP1.3@ (FROM: @ARC1.2@)
parse_arguments() {
	case "$#${1:-}${2:-}${3:-}${4:-}" in
	1-h | 1-v | 1--help | 1--version) # Print usage
		print_usage
		;;
	1-t) # Test mode
		SHTRACER_MODE='TEST'
		return
		;;
	1-*) # Undefined option
		error_exit 1 "parse_arguments" "Invalid argument"
		;;
	1*) # Normal mode
		SHTRACER_MODE='NORMAL'
		;;
	2*-C) # Normal mode with color
		SHTRACER_MODE='NORMAL'
		;;
	2*-v) # Verify mode
		SHTRACER_MODE='VERIFY'
		;;
	4*-c*) # Change mode
		SHTRACER_MODE='CHANGE'
		BEFORE_TAG="$3"
		AFTER_TAG="$4"
		;;
	*)
		error_exit 1 "parse_arguments" "Invalid argument"
		;;
	esac

	# Check if config file exists
	if [ ! -r "$1" ]; then
		error_exit 1 "parse_arguments" "$1 does not exist"
	fi

	cd "$CURRENT_DIR" || error_exit 1 "parse_arguments" "Cannot change current directory"
	CONFIG_DIR="$(cd "$(dirname "$1")" && pwd)"
	OUTPUT_DIR="${CONFIG_DIR%/}/output/"
	CONFIG_PATH="${CONFIG_DIR%/}/$(basename "$1")"
	CONFIG_OUTPUT=$(check_configfile "$CONFIG_PATH")
}

##
# @brief  Main routine
# @tag    @IMP1.4@ (FROM: @ARC1.1@)
main_routine() {

	load_functions
	init_environment
	parse_arguments "$@"

	# Tag change mode
	if [ "$SHTRACER_MODE" = 'CHANGE' ]; then
		swap_tags "$CONFIG_OUTPUT" "$BEFORE_TAG" "$AFTER_TAG"
		return 0

	# Test mode
	elif [ "$SHTRACER_MODE" = 'TEST' ]; then
		sh -c "cd ${SCRIPT_DIR%/}/scripts/test/; ./shtracer_test.sh"
		return 0
	fi

	# Normal mode or Verify mode
	if ! _TAGS=$(extract_tags "$CONFIG_OUTPUT"); then
		error_exit 1 "main_routine" "Error in extract_tags"
	fi
	if ! _TAG_TABLE_FILENAMES=$(make_tag_table "$_TAGS"); then
		error_exit 1 "main_routine" "Error in make_tag_table"
	fi

	_TAG_TABLE_FILENAME=${_TAG_TABLE_FILENAMES%%"$SHTRACER_SEPARATOR"*}
	_VERIFICATION_FILENAME=${_TAG_TABLE_FILENAMES#*"$SHTRACER_SEPARATOR"}

	if [ "$SHTRACER_MODE" = 'NORMAL' ]; then

		if ! _UML_OUTPUT_FILENAME="$(make_target_flowchart "$CONFIG_OUTPUT")"; then
			error_exit 1 "main_routine" "Error in make_target_flowchart"
		fi


		if ! make_html "$_TAG_TABLE_FILENAME" "$_TAGS" "$_UML_OUTPUT_FILENAME"; then
			error_exit 1 "main_routine" "Error in make_html"
		fi
	fi

	if print_verification_result "$_VERIFICATION_FILENAME"; then
		cat "$_TAG_TABLE_FILENAME"
	fi
}

case "$0" in
*shtracer)
	main_routine "$@"
	;;
*)
	:
	;;
esac
